#- name: mirror assisted installer images
#  include_role:
#    name: "{{ playbook_dir }}/../common-roles/offline-mirror-olm"

    #- name: mirror assisted installer images
      #  include_role:
#    name: "{{ playbook_dir }}/../common-roles/mirror-ai-images"
- name: Create temporary directory
  tempfile:
    state: directory
  register: temporary_directory

- name: Clone AI operator
  ansible.builtin.git:
    repo: https://github.com/openshift/assisted-service.git
    dest: "{{ temporary_directory.path }}/assisted-service"

- name: Remove mods directory
  ansible.builtin.shell:
    cmd: "sudo rm -rf ${GOPATH}/pkg/mod/"

- name: Replace kustomization.yaml patch image
  lineinfile:
    path: "{{ temporary_directory.path }}/assisted-service/config/default/kustomization.yaml"
    regexp: "^#- assisted-service-patch-image.yaml"
    line: "- assisted-service-patch-image.yaml"

- name: Set private registry var
  set_fact:
    provisioner_cluster_registry_var: "{% if provisioner_cluster_registry is defined and provisioner_cluster_registry|length > 0 %}{{ provisioner_cluster_registry }}{% else %}{{ provisioner_cluster_name }}-disconnecter.{{ provisioner_cluster_name }}.{{ provisioner_cluster_domain }}:5000{% endif %}"

- name: Set disconnected http server var
  set_fact:
    disconnected_http_server_var: "{% if disconnected_http_server is defined and disconnected_http_server|length > 0 %}{{ disconnected_http_server }}{% else %}{{ provisioner_cluster_name }}-disconnecter.{{ provisioner_cluster_name }}.{{ provisioner_cluster_domain }}:80{% endif %}"

- name: Patch image with the one pointing to our mirror
  lineinfile:
    path: "{{ temporary_directory.path }}/assisted-service/config/default/assisted-service-patch-image.yaml"
    regexp: "^\\s+image: quay.io/rwsu/assisted-service:latest"
    line: "        image: {{ provisioner_cluster_registry_var }}/ocpmetal/assisted-service:latest"

- name: Patch init containers to point to our mirror
  lineinfile:
    path: "{{ temporary_directory.path }}/assisted-service/config/default/assisted-service-patch-init-containers.yaml"
    regexp: "^\\s+image: registry.access.redhat.com/ubi8/ubi-minimal:latest"
    line: "        image: {{ provisioner_cluster_registry_var }}/ubi8/ubi-minimal:latest"

- name: Patch init containers to point to our mirror
  lineinfile:
    path: "{{ temporary_directory.path }}/assisted-service/config/default/assisted-service-patch-init-containers.yaml"
    regexp: "^\\s+image: quay.io/openshift/origin-cli:latest"
    line: "        image: {{ provisioner_cluster_registry_var }}/openshift/origin-cli:latest"

- name: Replace openshift versions
  lineinfile:
    path: "{{ temporary_directory.path }}/assisted-service/config/onprem-iso-fcc.yaml"
    regexp: "^\\s+OPENSHIFT_VERSIONS=.*"
    line: "                OPENSHIFT_VERSIONS={\"4.8\":{\"display_name\":\"4.8\",\"release_image\":\"{{ provisioner_cluster_registry_var }}/ocp/release:{{ ocp_release_nightly_version }}\",\"rhcos_image\":\"http://{{ disconnected_http_server_var }}/{{ rhcos_image_version }}\", \"rhcos_version\": \"{{ rhcos_image_version | regex_search('^(.*)-live.*$', '\\1') | first }}\",\"support_level\":\"testing\"}}"

- name: Infer rhcos version from image
  set_fact:
    rhcos_version_var: "{{ rhcos_image_version | regex_search('^(.*)-live.*$', '\\1') | first }}"

- name: Replace openshift version in onprem
  lineinfile:
    path: "{{ temporary_directory.path }}/assisted-service/onprem-environment"
    regexp: "^OPENSHIFT_VERSIONS=.*"
    line: "OPENSHIFT_VERSIONS={\"4.8\":{\"display_name\":\"4.8\",\"release_image\":\"{{ provisioner_cluster_registry_var }}/ocp/release:{{ ocp_release_nightly_version }}\",\"rhcos_image\":\"http://{{ disconnected_http_server_var }}/{{ rhcos_image_version }}\", \"rhcos_version\": \"{{ rhcos_version_var }}\",\"support_level\":\"testing\"}}"

- name: Add 4.8 versions to ocp_versions
  ansible.builtin.blockinfile:
    path: "{{ temporary_directory.path }}/assisted-service/default_ocp_versions.json"
    insertafter: "},"
    marker: ""
    block: |2
             "4.8": {
                "display_name": "4.8",
                "release_image": "{{ provisioner_cluster_registry_var }}/ocp/release:{{ ocp_release_nightly_version }}",
                "rhcos_image": "http://{{ disconnected_http_server_var }}/{{ rhcos_image_version }}",
                "rhcos_version": "{{ rhcos_version_var }}",
                "support_level": "beta"
              },

- name: Download and copy rhcos image if using default cluster
  block:
    - name: Download image to temporary directory
      uri:
        url: "{{ rhcos_remote_url }}"
        dest: "{{ temporary_directory.path }}/{{ rhcos_remote_url | basename }}"

    - name: Get IP of the registry vm
      shell: "kcli info vm {{ provisioner_cluster_name }}-disconnecter -f ip -v"
      register: disconnecter_vm

    - name: Copy final image to disconnecter vm
      ansible.builtin.shell:
        cmd: "scp -6 {{ temporary_directory.path }}/{{ rhcos_remote_url | basename }} root@\\[{{ disconnecter_vm.stdout }}\\]:/var/www/html/"

  when: provisioner_cluster_registry is not defined and provisioner_cluster_registry|length <= 0
